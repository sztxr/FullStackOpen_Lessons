{"ast":null,"code":"import _slicedToArray from \"/home/spiderlily/Code/FullStackOpen/lessons/notes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/spiderlily/Code/FullStackOpen/lessons/notes/src/App.js\";\nimport React, { useState } from 'react';\nimport Note from './components/Note';\n\nconst App = props => {\n  const _useState = useState(props.notes),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const rows = () => notes.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, rows()));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/spiderlily/Code/FullStackOpen/lessons/notes/src/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","rows","map","note","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAACG,KAAK,CAACC,KAAP,CADb;AAAA;AAAA,QACdA,KADc;AAAA,QACPC,QADO;;AAGrB,QAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAnB;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,EADP,CAFF,CADF;AAQD,CAbD;;AAeA,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n\n  const rows = () => notes.map(note => <Note key={note.id} note={note} />)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {rows()}\n      </ul>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}